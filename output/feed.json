{
    "version": "https://jsonfeed.org/version/1",
    "title": "Martin Kaptein",
    "description": "",
    "home_page_url": "https://www.martinkaptein.com",
    "feed_url": "https://www.martinkaptein.com/feed.json",
    "user_comment": "",
    "icon": "https://www.martinkaptein.com/media/website/logo.png",
    "author": {
        "name": "Martin Kaptein"
    },
    "items": [
        {
            "id": "https://www.martinkaptein.com/computer-hulp-en-bouw-van-websites/",
            "url": "https://www.martinkaptein.com/computer-hulp-en-bouw-van-websites/",
            "title": "Computerhulp en bouw van websites",
            "summary": "Martin Kaptein is een computerexpert in Bosch en Duin, Den Dolder, Huis ter Heide, Bilthoven, Utrecht en Amersfoort. Hij komt aan huis en lost computergerelateerde problemen op. Ook bouwt Martin websites met alles met alles erop en eraan. Martin Kaptein komt bij U thuis langs, om&hellip;",
            "content_html": "<p>Martin Kaptein is een computerexpert in Bosch en Duin, Den Dolder, Huis ter Heide, Bilthoven, Utrecht en Amersfoort. Hij komt aan huis en lost computergerelateerde problemen op. Ook bouwt Martin websites met alles met alles erop en eraan. </p>\n<h2 id=\"mcetoc_1dajijloj4\">Diensten</h2>\n<h3 id=\"mcetoc_1dajivagh6\">Hulpverlening met computers en telefoons</h3>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/25/webapi.jpg\" alt=\"computer probleemen oplossen\" width=\"1193\" height=\"657\"></p>\n<p>Martin Kaptein komt bij U thuis langs, om problemen met uw computer of telefoon op te lossen.</p>\n<p>Dat kan zijn:</p>\n<ul>\n<li>algemene hulp bij bedienen van computer en dat Uw computer niet vreemd doet;</li>\n<li>Computer repareren en in elkaar zetten (er zijn wel eventueel extra kosten voor hardware);</li>\n<li>virussen verwijderen en de veiligheid van Uw computer in orde brengen;</li>\n<li>hulp bij installeren van apparaten (bijvoorbeeld printers, telefoons, routers, beeldschermen, kabels en andere technische apparaten);</li>\n<li>Installeren van software, en bestuurssystemen (Windows, Linux, MacOS, Android);</li>\n<li>Hulp met synchronisatie van gegevens van Uw PC, telefoon en andere apparaten;</li>\n<li>Hulp met Android gebaseerde mobiele telefoons, rooten, custom roms installeren, soft bricks oplossen, en veel meer.</li>\n</ul>\n<h3 id=\"mcetoc_1dajjm6cr7\">Websites bouwen</h3>\n<p>Martin Kaptein bouwt ook websites met alles erop en eraan:</p>\n<ul>\n<li>design en vormgeving van websites;</li>\n<li>bouwen van websites: Van statische websites tot complexe dynamische websites en blogs - precies volgens Uw wensen;</li>\n<li>complexe Websites met Databases, Content Management Systemen en Login Systemen;</li>\n<li>Search Engine Optimization (SEO), voor dat Uw website goed gevonden wordt bij Google en andere zoekmachines;</li>\n<li>gebruik van alle modernste en veilige technieken (versleuteling, SSL, HTTPS);</li>\n<li>ondersteuning van de nieuwste software, bijvoorbeeld Google <span class=\"st\">Accelerated Mobile Pages (AMP);</span></li>\n<li>mobiele pagina's en websites;</li>\n<li>en nog veel meer!</li>\n</ul>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/25/webdesign.jpg\" alt=\"web design\" width=\"587\" height=\"440\"></p>\n<p>Ook bied ik hulp aan, bij alles wat er bij een website hoort. Dus onder andere:</p>\n<ul>\n<li>website domain registreren (of domain transfer);</li>\n<li>server instellen;</li>\n<li>gebruiken van CDNs (content delivery network), dat Uw website razendsnel werkt;</li>\n<li>hulp met DNS (Domain Name Server);</li>\n<li>veiligheid van software, back-ups, en updates.</li>\n</ul>\n<h2 id=\"mcetoc_1dajl6hgpa\"><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/25/wordpress-illustration.jpg\" alt=\"cloud\" width=\"553\" height=\"415\"></h2>\n<h2 id=\"mcetoc_1dajiu6n35\">Locaties</h2>\n<p>Martin Kaptein komt bij u thuis langs, als u in de omgeving van Utrecht, en Amersfoort zit, onder andere in Bosch en Duin, Bilthoven, Den Dolder, Huis Ter Heide, Zeist. Natuurlijk kunt u ook Uw computer bij mij voor reparatie brengen. </p>\n<p>Ook helpt Martin Kaptein u op afstand bijvoorbeeld via telefoon of Skype.</p>\n<h2 id=\"mcetoc_1dajidu3e0\">Kosten</h2>\n<p>Standaard vraagt Martin Kaptein 45 EUR per uur. Natuurlijk komt van tevoren een schatting van de prijs. </p>\n<h2 id=\"mcetoc_1dajkmj1o9\">Contact opnemen</h2>\n<p>Mijn naam is Martin Kaptein. Graag vraag ik u om contact op te nemen via mail op <a href=\"mailto:info@martinkaptein.com\">info@martinkaptein.com</a> . Daarna kunnen wij ook telefonisch communiceren.</p>\n<p> </p>\n<iframe width=\"640\" height=\"933\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSf_iKSuC9IRnvRmh0KiMOP1Oovove8skWw9U1FieEDOSIR77Q/viewform?embedded=true\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading...</iframe>",
            "image": "https://www.martinkaptein.com/media/posts/25/webapi.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-05-11T16:39:10+02:00",
            "date_modified": "2019-05-12T16:54:17+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/piano-lessen-en-muziek-theorie-lessen/",
            "url": "https://www.martinkaptein.com/piano-lessen-en-muziek-theorie-lessen/",
            "title": "Piano lessen en muziek theorie lessen",
            "summary": "Ik bied zowel klassieke pianolessen als ook lessen voor muziektheorie (klassiek en jazz) aan, voor alle leeftijden en niveaus, in de omgeving van Bosch en Duin, Den Dolder, Huis ter Heide en Bilthoven (omgeving Amersfoort en Utrecht valt ook over te praten) in volgende talen: Nederlands,&hellip;",
            "content_html": "<p>Ik bied zowel klassieke pianolessen als ook lessen voor muziektheorie (klassiek en jazz) aan, voor alle leeftijden en niveaus, in de omgeving van Bosch en Duin, Den Dolder, Huis ter Heide en Bilthoven (omgeving Amersfoort en Utrecht valt ook over te praten) in volgende talen: Nederlands, Engels, Duits en Russisch.</p>\n<h2 id=\"mcetoc_1d9n6cebo0\">Over mij</h2>\n<p>Mijn naam is Martin Kaptein. Ik studeer in het 4de jaar aan het ArtEz conservatorium Zwolle, piano, klassieke muziek. Ik heb veel <a href=\"https://www.youtube.com/channel/UCosUIzMUriRTgg60vh3EwCQ\" target=\"_blank\" rel=\"noopener noreferrer\">zowel praktische ervaring, in het geven van concerten</a> (solo, maar ook met ensembles), als ook theoretische kennis van muziek.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/24/0F4ADF0F-DACC-46C0-822F-2F2A4E843AB2.JPG\" alt=\"Piano en muziek theorielessen bij Martin Kaptein\" width=\"493\" height=\"450\"></p>\n<p>Door mijn veelzijdige taalkennis, bied ik mijn lessen in het Nederlands, Engels, Duits en zelfs in het Russisch aan. Dit geld voor zowel de pianolessen als ook voor de theorielessen.</p>\n<h2 id=\"mcetoc_1d9n6jv9e2\"><br>Piano lessen</h2>\n<p>De pianolessen (zowel individueel als ook groepslessen), die ik geef, worden vooral benaderd vanuit de klassieke kant, maar op wens ook in combinatie met theorie (ik ben, persoonlijk, opgegroeid met de beroemde Russische pianoschool).</p>\n<h3 id=\"mcetoc_1d9n6rlck3\">Niveau</h3>\n<p>In het geven van mijn pianolessen ben ik uitermate veelzijdig: deze zijn geschikt zowel voor beginners - iemand die nog nooit een piano aangeraakt heeft - voor studenten, die toelating willen doen voor een conservatorium (dit geld overigens ook voor theorie), tot professionele musici.</p>\n<h3 id=\"mcetoc_1d9ptt6220\">Mijn filosofie</h3>\n<p>De filosofie van mijn pianolessen is om vooral de individualiteit van de persoonlijkheid naar voren te laten komen, en met passende muziekstukken aan de techniek, de artistieke en de muzikale elementen te werken. The music comes first!</p>\n<p> </p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/24/IMG_8103.JPG\" alt=\"Martin Kaptein tijdens het optreden.\" width=\"1280\" height=\"720\"></p>\n<h2 id=\"mcetoc_1d9n7bhkf6\">Muziek theorie</h2>\n<p>Daarnaast bied ik volgende muziektheorielessen aan: </p>\n<ul>\n<li>Basis muziektheorie (noten lezen, instrumenten);</li>\n<li>harmonie (zowel klassiek als ook jazz en pop);</li>\n<li>solfège: Gehoortraining (zingen, ritmes);</li>\n<li>analyse (klassieke muziek en Jazz&amp;Pop);</li>\n<li>muziekgeschiedenis.</li>\n</ul>\n<h3 id=\"mcetoc_1d9n6rlck3\">Niveau</h3>\n<p>De lessen voor muziektheorie zijn ook voor alle leeftijden, van beginners tot en met conservatorium niveau. Voor theorie bied ik ook voorbereiding tot toelating aan een conservatorium (ook in verband met het gevraagde curriculum).</p>\n<p>Voor theorie bied ik zowel individuele lessen als ook groepslessen aan.</p>\n<h2 id=\"mcetoc_1d9npqvlf1\">Locatie van de lessen</h2>\n<p>De lessen vinden plaats bij mij thuis (achter een fantastisch instrument) in Bosch en Duin (contact opnemen voor exact adres). Op wens kan ik ook bij U thuiskomen. Dat kan in de omgeving van Bosch en Duin, Huis ter Heide, Den Dolder, Bilthoven en evt ook Amersfoort en Utrecht.</p>\n<h2 id=\"mcetoc_1d9npvci82\">Prijs</h2>\n<p>Dit zijn mijn vraagprijzen. Bij groepslessen zouden er ook andere afspraken gemaakt kunnen worden.</p>\n<table>\n<tbody>\n<tr>\n<td><strong>Bij mij thuis:</strong></td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>Piano lessen</td>\n<td>45 minuten</td>\n<td>30 EUR</td>\n</tr>\n<tr>\n<td>Piano lessen</td>\n<td>60 minuten</td>\n<td>35 EUR</td>\n</tr>\n<tr>\n<td>Muziek theorie</td>\n<td>45 minuten</td>\n<td>25 EUR</td>\n</tr>\n<tr>\n<td><strong>Bij u thuis:</strong></td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>Piano lessen</td>\n<td>45 minuten</td>\n<td>40 EUR</td>\n</tr>\n<tr>\n<td>Piano lessen</td>\n<td>60 minuten</td>\n<td>45 EUR</td>\n</tr>\n<tr>\n<td>Muziek theorie</td>\n<td>45 minuten</td>\n<td>35 EUR</td>\n</tr>\n</tbody>\n</table>\n<p><br>De eerste les en het bespreken van ons traject is, uiteraard, <strong>gratis</strong>!</p>\n<h2 id=\"mcetoc_1d9nqco4q3\">Contact<br><br></h2>\n<p>Graag vraag ik U om contact op te nemen per mail op <a href=\"mailto:info@martinkaptein.com\">info@martinkaptein.com</a> , dan kan ik U ook, evt., mijn telefoonnummer doorgeven.</p>\n<iframe width=\"640\" height=\"933\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSf_iKSuC9IRnvRmh0KiMOP1Oovove8skWw9U1FieEDOSIR77Q/viewform?embedded=true\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading...</iframe>",
            "image": "https://www.martinkaptein.com/media/posts/24/CE3B37C0-EF0F-48BB-98A0-E7FC79CF2032.JPG",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-05-01T16:55:34+02:00",
            "date_modified": "2019-05-12T16:56:00+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/sailfish-os-nexus-4-2018-updated/",
            "url": "https://www.martinkaptein.com/sailfish-os-nexus-4-2018-updated/",
            "title": "Sailfish OS for Nexus 4 updated to version 2.1.3.7 for 2018",
            "summary": "Recently, I was browsing the internet, hoping to find some news about the long-untouched Sailfish OS port for the Nexus 4. According to the merproject site the latest Sailfish port for the Nexus 4 is still the gamma 8 version, which corresponds to Sailfish OS&hellip;",
            "content_html": "<p>Recently, I was browsing the internet, hoping to find some news about the long-untouched Sailfish OS port for the Nexus 4. According to the <a href=\"https://wiki.merproject.org/wiki/Adaptations/libhybris/Install_SailfishOS_for_mako\">merproject site</a> the latest Sailfish port for the Nexus 4 is still the gamma 8 version, which corresponds to Sailfish OS 2.0.5.6 (file list <a href=\"http://images.devaamo.fi/sfe/mako/\">here</a>).</p>\n<p><strong>However</strong>, today I was browsing the <a href=\"https://4pda.ru/forum/index.php?showtopic=559889&amp;st=780\">4pda.ru forum about the Sailfish OS port for the Nexus 4</a> where someone posted a link to the sailfish os mako release version 2.1.3.7 based on CM-13 .</p>\n<p><a href=\"https://yadi.sk/d/huAt-End3S4H7x\">Here is the download link for both the Cyanogenmod 13 SNAPSHOT and Sailfish OS mako version 2.1.3.7</a>.</p>\n<p>So let’s take a look how this stuff works.</p>\n<h2 id=\"mcetoc_1d9iedgub0\">Installation</h2>\n<p>I am using the <a href=\"https://eu.dl.twrp.me/mako/\">latest TWRP recovery for Nexus 4</a>.</p>\n<p>The installations instructions are totally the same as <a href=\"../sailfish-os-on-nexus-4/\">in my last post about Sailfish OS on the Nexus 4</a>.</p>\n<p>Here is a quick run-down:</p>\n<ul>\n<li>Backup first (duh)</li>\n<li>Flash the latest TWRP recovery</li>\n<li>Make a full wipe in the recovery (go to Advanced Wipe and check everything)</li>\n<li>Transfer both .zip files to the phone</li>\n<li>Install the cm-13-xx.zip</li>\n<li>Install sailfishos-xx.zip</li>\n<li>Reboot</li>\n</ul>\n<p><strong>Oh yeah, I am not responsible if you brick your device. Also, you lose all your data in the process of installation.</strong></p>\n<h2 id=\"mcetoc_1d9iedgub1\">Review Sailfish OS 2.1.3.7 on Nexus 4</h2>\n<p>Now, let’s take a look how this Sailfish version works.</p>\n<p>And unfortunately, there is directly one really big flaw: The camera doesn’t work! I haven’t found out the reason for that yet, but I will keep this blog page updated for more news.</p>\n<p>Bluetooth seems to work just fine (in contrary to <a href=\"../sailfish-os-on-nexus-4/\">my previous post</a>).</p>\n<p>However, the Jolla AppStore still doesn’t really work (it refuses to download the stock apps), but apparently it is possible to add open repositories (which don’t require authentication), and obtain apps from there. Last but not least you could always install the .rpm’s manually.</p>\n<h2 id=\"mcetoc_1d9iedgub2\">Screenshots Sailfish OS 2.1.3.7 on Nexus 4</h2>\n<p>Here are some screenshots:</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/22/sailfish21scr1.jpg\" alt=\"Sailfish OS on Nexus 4 screenshot 1\" width=\"800\" height=\"1176\"></p>\n<p><em>Sailfish 2.1 on Nexus 4, welcome screen</em></p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/22/sailfish21scr2.jpg\" alt=\"Sailfish OS on Nexus 4 screenshot 2\" width=\"900\" height=\"1200\"></p>\n<p><em>Sailfish 2.1 on Nexus 4, device information</em></p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/22/sailfish21scr3.jpg\" alt=\"Sailfish OS on Nexus 4 screenshot 3\" width=\"600\" height=\"800\"></p>\n<p><em>Sailfish 2.1 on Nexus 4, camera issue</em></p>\n<h2 id=\"mcetoc_1d9iedgub3\">Conclusion</h2>\n<p>It is nice that porters are still at work. But the camera, which is not working, is, until now, a deal breaker. For the future maybe I will dive deeper into the actual porting process, perhaps build it myself.</p>\n<p>For now, I will keep this page updated to any new developments regarding the state of Sailfish OS for the Nexus 4 in 2018.</p>",
            "image": "https://www.martinkaptein.com/media/posts/22/sailfish21scr2.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T19:06:12+02:00",
            "date_modified": "2019-04-28T19:06:12+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/sailfish-os-on-nexus-4/",
            "url": "https://www.martinkaptein.com/sailfish-os-on-nexus-4/",
            "title": "Installing Sailfish OS on Google Nexus 4",
            "summary": "In this tutorial I will show how to install Sailfish OS on a LG Nexus 4. This post assumes that: Without further a do, here we go! This tutorial will show the simplest way to install Sailfish OS on a Nexus 4. So stuff like&hellip;",
            "content_html": "<p>In this tutorial I will show how to install Sailfish OS on a LG Nexus 4. This post assumes that:</p>\n<ul>\n<li>You are rooted</li>\n<li>You have a custom recovery (I had the latest TWRP recovery)</li>\n<li>You have adb, fast boot and device drivers installed on your PC.</li>\n<li>You have a very basic understanding how this stuff works</li>\n<li>You made backups (since you will lose all data)</li>\n<li>If you brick your device I am not responsible</li>\n</ul>\n<p>Without further a do, here we go!</p>\n<p> </p>\n<h2 id=\"mcetoc_1d9ie25tg0\">Installing Sailfish OS</h2>\n<p>This tutorial will show the simplest way to install Sailfish OS on a Nexus 4. So stuff like Multirom aren’t necessary. First of all, download the latest Sailfish OS port <a href=\"http://images.devaamo.fi/sfe/mako/gamma8/sailfishos-mako-release-2.0.5.6-gamma8.zip\">here</a>.</p>\n<p>Then download CyanogenMod <a href=\"http://cyanogenmod.org.ru/arh/cm-11-20141115-SNAPSHOT-M12-mako.zip\">here</a>. If the links don’t work, feel free to <a href=\"../contact/\">contact</a> me, I will upload this stuff to Dropbox or something.</p>\n<p>After that, transfer the files to your device, using any method you are comfortable with (for example <code>adb push</code>).</p>\n<p>Now, boot your device to recovery, install first the CyanogenMod zip (<em>flash zip</em>), and directly after that (without restarting) the Sailfishos zip. Then restart your device.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/21/installing_zip_sailfishos.jpg\" alt=\"Flashing Sailfish OS on Nexus 4\" width=\"500\" height=\"667\"></p>\n<p><em>installing the zip files</em></p>\n<p>Sailfish OS should boot just fine.</p>\n<p>It should be noted, that not all of the stuff worked for me (for example Bluetooth).</p>\n<p>For more information you should see the <a href=\"https://wiki.merproject.org/wiki/Adaptations/libhybris/Install_SailfishOS_for_mako\">official site of the Sailfish OS port for the Nexus 4 here</a>.</p>\n<h2 id=\"mcetoc_1d9ie25tg1\">Sailfish OS on Nexus 4 in action.</h2>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/21/sailfish-os-in-action-1.jpg\" alt=\"Sailfish OS in action on Nexus 4\" width=\"500\" height=\"375\"></p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/21/sailfish-os-in-action-2.jpg\" alt=\"Sailfish OS in action on Nexus 4, second picture\" width=\"700\" height=\"525\"></p>\n<p><em>Sailfish OS on Nexus 4 in action</em></p>\n<h2 id=\"mcetoc_1d9ie25tg2\">Conclusion</h2>\n<p>This is a very nice way, to get a glimpse at Sailfish OS, without buying a dedicated phone (which are, right now, quite hard to find).</p>",
            "image": "https://www.martinkaptein.com/media/posts/21/sailfish-os-in-action-2.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T19:02:11+02:00",
            "date_modified": "2019-04-28T19:02:19+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/pythoncms/",
            "url": "https://www.martinkaptein.com/pythoncms/",
            "title": "PythonCMS - A static blog and site generator",
            "summary": "PythonCMS is a static blog and site generator, written in Python 3, which is fully portable and very easy to use. My idea is to create something that is refreshingly easy and simple to use, requiring only basic knowledge of HTML, yet being very flexible.",
            "content_html": "<p>PythonCMS is a static blog and site generator, written in Python 3, which is fully portable and very easy to use.</p>\n<blockquote>\n<p>My idea is to create something that is refreshingly easy and simple to use, requiring only basic knowledge of HTML, yet being very flexible.</p>\n</blockquote>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/20/pythoncms_in_action.jpg\" alt=\"PythonCMS in action\" width=\"1265\" height=\"609\"></p>\n<p><em>An example post using PythonCMS</em></p>\n<h3 id=\"mcetoc_1d9idnvd00\">Advantages of PythonCMS</h3>\n<ul>\n<li>No config files</li>\n<li>It fully portable</li>\n<li>No local webserver required</li>\n<li>Very easy theming</li>\n<li>Easy Search Engine Optimization (SEO)</li>\n<li>AMP &amp; Analytics support</li>\n</ul>\n<h2 id=\"mcetoc_1d9idnvd01\">Quickstart guide</h2>\n<p>It is very easy to get started with PythonCMS.</p>\n<h3 id=\"mcetoc_1d9idnvd02\">Installing Python 3</h3>\n<p>Make sure you have installed Python 3.x (any version 3 will work). If not, <a href=\"https://www.python.org/downloads/\">download Python 3 here</a>.</p>\n<h3 id=\"mcetoc_1d9idnvd03\">Cloning the repository</h3>\n<p>Clone the PythonCMS repository into the directory of your future site (or blog):</p>\n<pre><code>\ngit clone https://github.com/martinkaptein/pythonCMS.git\ncd pythonCMS\n</code></pre>\n<p>Alternatively you can <a href=\"https://github.com/martinkaptein/pythonCMS/archive/master.zip\">download the PythonCMS zip archive here</a>. </p>\n<h3 id=\"mcetoc_1d9idnvd04\">Customizing the main page</h3>\n<p>Edit the <code>index.html</code> file in the root of the directory. This will become the main page of the blog (or site).</p>\n<p>I recommend to change the links for the social networks. Feel free to adjust everything to your liking except for the <code>$InsertLatestPostBelow</code> tag. It is required for the script to work.</p>\n<h3 id=\"mcetoc_1d9idnvd05\">Writing your first blog post</h3>\n<p>Your working directory is inside the <code>drafts/drafts</code> folder.</p>\n<p>Write your first blog entry in <code>drafts/drafts/draft.html</code> or <code>drafts/drafts/example.html</code>. Again, change it however you want.</p>\n<p>For future posts you can create or rename any *.html files inside the <code>drafts/drafts</code> folder. You have full freedom!</p>\n<h4 id=\"mcetoc_1d9idnvd06\">Adding media to the blog post</h4>\n<p>For media (such as images) put them into the media folder (<code>media/</code>) and link 2 levels up from your draft.html:</p>\n<pre><code>\n&lt;img alt=\"description of your picture\" src=\"../../media/yourpicture.jpg\" /&gt;\n</code></pre>\n<h4 id=\"mcetoc_1d9idnvd07\">Analytics and SEO</h4>\n<p>Add any meta, script etc. tags as you would do normally. There are explanatory comments. </p>\n<h4 id=\"mcetoc_1d9idnvd08\">Previewing your post</h4>\n<p>Preview your post by opening the <code>draft.html</code> file you just edited (no local webserver neccessary for preview).</p>\n<p>However, it is still good practise to use a simple webserver like:</p>\n<pre><code>\npython -m SimpleHTTPServer\n</code></pre>\n<h3 id=\"mcetoc_1d9idnvd09\">Generating the site</h3>\n<p>Now it's time to build the site!</p>\n<p>Run pythonCMS.py:</p>\n<pre><code>\npython pythonCMS.py\n</code></pre>\n<p>If you have 2 python installations run:</p>\n<pre><code>\npython3 pythonCMS.py\n</code></pre>\n<p>The instructions on screen will guide you through the process.</p>\n<p>After that just upload the whole folder to your site (ftp, ssh, whatever). Since PythonCMS is fully portable this is possible without problems.</p>\n<p>I even included a <code>robots.txt</code> to exclude the drafts from being indexed by search engines.</p>\n<p>Done!</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/20/pythoncms_terminal.jpg\" alt=\"Running PythonCMS in the Terminal\" width=\"1870\" height=\"306\"></p>\n<p><em>Running PythonCMS from Terminal</em></p>\n<h2 id=\"mcetoc_1d9idnvd0a\">Theming</h2>\n<p>This is the easy part! Basically you can change everything <strong>except</strong>:</p>\n<ul>\n<li><code>$InsertLatestPostBelow</code> (in the root <code>index.html</code>) since it's required for PythonCMS to generate the menu system (feel free to relocate it)</li>\n<li>For styling and javascript, make sure <code>draft.html</code> links 2 levels up:</li>\n</ul>\n<p>Like this:</p>\n<pre><code>\nsrc=\"../../assets\"\n</code></pre>\n<p>That is it!</p>\n<h2 id=\"mcetoc_1d9idnvd1b\">AMP</h2>\n<p>See <a href=\"https://ampbyexample.com/\">https://ampbyexample.com/</a> for theming, then apply standart theming procedure for this static site generator.</p>\n<h2 id=\"mcetoc_1d9idnvd1c\">Future release ideas</h2>\n<ul>\n<li>add markdown support</li>\n<li>backwards compatibility with Python 2</li>\n</ul>\n<h2 id=\"mcetoc_1d9idnvd1d\">Notes</h2>\n<p>The default theme has been made and published by/at <a href=\"http://blacktie.co/\">http://blacktie.co/</a> so it's not by me. Props for them for their amazing work!</p>\n<p>Find the source at <a href=\"https://github.com/martinkaptein/pythonCMS\">github.com/martinkaptein/pythonCMS</a>. Ideas for features and contributions are welcome!</p>",
            "image": "https://www.martinkaptein.com/media/posts/20/pythoncms_in_action.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T18:54:37+02:00",
            "date_modified": "2019-04-28T18:54:37+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/exploring-google-deepdream/",
            "url": "https://www.martinkaptein.com/exploring-google-deepdream/",
            "title": "Exploring Google DeepDream and getting nice images",
            "summary": "In this Blog post I would like to explore Google DeepDream and report about my experiences with it. Google DeepDream is an open source program, created by Google, which uses a convolutional neural networks (CNN's) to find and enhance patterns in images. This can lead&hellip;",
            "content_html": "<p>In this Blog post I would like to explore Google DeepDream and report about my experiences with it.</p>\n<h2 id=\"mcetoc_1d9i7asjp0\">Introduction to Google DeepDream</h2>\n<p>Google DeepDream is an <a href=\"https://github.com/google/deepdream\">open source program, created by Google</a>, which uses a convolutional neural networks (CNN's) to find and enhance patterns in images.</p>\n<p>This can lead to very cool-looking results.</p>\n<p>What I like about Google DeepDream is that it provides a very visual approach and representation of an, otherwise, very abstract topic.</p>\n<p>In this Blog post I will share some of my results and settings which I used.</p>\n<h2 id=\"mcetoc_1d9i7asjp1\">The source image</h2>\n<p>I used an image (which I took myself) of clouds:</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/19/cloudsw500.jpg\" alt=\"cumulunimbus clouds\" width=\"250\" height=\"231\"></p>\n<p><em>My source image, input for DeepDream</em></p>\n<p>In my experience the image dimension should be somewhere between 700 pixels sq and 200 pixels sq (not necessarily square, of course). Large images take an extremely long time to process, but can also provide really beautiful results.</p>\n<p>Also, the size of the <em>Dream stuff</em> doesn't scale with the image (probably depends on the trained model).</p>\n<p>Intrestingly enough, images with clouds tend to be most interesting. Humans do also tend to interpret different things when looking at clouds, so that's a nice parallel.</p>\n<h2 id=\"mcetoc_1d9i7asjp2\">My results</h2>\n<p>Here are some of my favourite results I got:</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/19/cloudsw500inc4cout.jpg\" alt=\"google deepdream output\" width=\"250\" height=\"231\"></p>\n<p><em>Default settings</em></p>\n<p>This is done, basically with the default settings of Google (but used <strong>98 iterations</strong>)</p>\n<pre><code>\nmake_step(net, step_size=1.5, end='inception_4c/output', jitter=32, clip=True, objective=objective_L2)\n</code></pre>\n<pre><code>\ndeepdream(net, base_img, iter_n=11, octave_n=4, octave_scale=1.4, \n          end='inception_4c/output', clip=True, **step_params)\n</code></pre>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/19/inc4bout.jpg\" alt=\"google deepdream output 2\" width=\"250\" height=\"231\"></p>\n<p><em>Layer: end='inception_4b/output'</em></p>\n<p>Whilst you can see in the first image more or less complete dogs, here it's more ears and eyes. This makes sense, as it's a 'lower level layer'.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/19/inc5aoutx123.jpg\" alt=\"google deepdream output 3\" width=\"250\" height=\"231\"></p>\n<p><em>Layer: end='inception_5a/output'</em></p>\n<p>This yields a very abstract result. Probably my favourite. This particular picture <strong>used 123 iterations</strong> (more on that later).</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/19/inc5bout.jpg\" alt=\"google deepdream inception output 5\" width=\"250\" height=\"231\"></p>\n<p><em>Layer: end='inception_5b/output'</em></p>\n<p>Well, I leave this one to you.</p>\n<p><em>Note: I had to down-scale these images, so that this site loads a bit faster :P I hope that's ok</em></p>\n<h2 id=\"mcetoc_1d9i7asjp3\">Modifications to the source code</h2>\n<p>The only modification I made was to 're-dream' every image (quite a large number of times).</p>\n<p>This helps to get a more vivid result.</p>\n<p>Here is the script I made (it saves every iteration, so you can make a nice .gif or something later). Also, it doesn't crash due to memory issues.</p>\n<pre><code>\nfor i in xrange(somenumber):\n    frame = deepdream(net, frame)\n    PIL.Image.fromarray(np.uint8(frame)).save(\"output/%04d.jpg\"%frame_i)\n    frame = np.float32(PIL.Image.open('output/%04d.jpg'%frame_i))\n    frame_i += 1\n    \n</code></pre>\n<h2 id=\"mcetoc_1d9i7asjp4\">Conclusion</h2>\n<p>I personally like this topic very much. Will probably write other blog posts about this too (for example, about using different models).</p>",
            "image": "https://www.martinkaptein.com/media/posts/19/inc5aoutx123.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T17:04:00+02:00",
            "date_modified": "2019-04-28T17:04:00+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/the-beauty-of-computer-dreams/",
            "url": "https://www.martinkaptein.com/the-beauty-of-computer-dreams/",
            "title": "When computers see dreams - the essence of dreams",
            "summary": "In this blog post, we will, quite literally, take a look inside a dream of a computer and I will talk about the meaning of dreams, both, human dreams and computer dreams. This is my second post about the topic of computer dreams, read the&hellip;",
            "content_html": "<p>In this blog post, we will, quite literally, take a look inside a dream of a computer and I will talk about the meaning of dreams, both, human dreams and computer dreams.</p>\n<p>This is my second post about the topic of computer dreams, read the first, more technical, post <a href=\"../exploring-google-deepdream/\">here</a>. In this case, I have worked with <a href=\"https://github.com/google/deepdream\">Google DeepDream</a>, more precisely with a <a href=\"https://github.com/martinkaptein/deepdream\">slightly modified version by myself</a>.</p>\n<p>Like I have already stated in <a href=\"../exploring-google-deepdream/\">my previous Blog post about DeepDream</a>, Google DeepDream is an open source program, created by Google, which uses convolutional neural networks to find and enhance patterns in images.</p>\n<p>The post will be specifically about Google DeepDream, although can be interpreted, surely, much more general, in a very broad way.</p>\n<h2 id=\"mcetoc_1d9i6s92k0\">Why Dream?</h2>\n<p>Although, one might argue, it is quite far fetched to compare DeepDream to human dreams, there are interesting similarities.</p>\n<p>For one, we human do quite a similar thing as Google DeepDream in our dreams: We, or better, our brain, or our subconscious, try to find patterns in the information we have received during our time awake.</p>\n<p>Probably, dreams help assign a meaning to the ‘raw’ information - a higher level of abstraction. Though more primitive, Google DeepDream does exactly the same.</p>\n<p>Also, there is the aspect of the (artistic) weirdness, which you can view for yourself in the following section of my post.</p>\n<h1 id=\"mcetoc_1d9i6s92l1\" >The beauty of computer dreams</h1>\n<p>Here are some my results with DeepDream. The quality has been reduced to let the site load faster, links for the full-res versions are below.</p>\n<p>As I was running Google DeepDream in a virtual machine, I took a very long time to generate those. For more technical stuff read my <a href=\"../exploring-google-deepdream/\">previous post about Google DeepDream</a> or view <a href=\"https://github.com/martinkaptein/deepdream\">my Google DeepDream fork on Github here</a>.</p>\n<p>Without further a do, here we go!</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/5ppbuild.jpg\" alt=\"\" width=\"1200\" height=\"800\"></p>\n<p><em>weird buildings</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/buildInc4eOUT.jpg\" alt=\"\" width=\"940\" height=\"627\"></p>\n<p><em>more weird buildings</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/inc4cOUTelbrusx19.jpg\" alt=\"google deepdream animals\" width=\"1200\" height=\"800\"></p>\n<p><em>deepdream animals</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/inc4cOUTplaces.jpg\" alt=\"pagodes in google deepdream\" width=\"940\" height=\"627\"></p>\n<p><em>deepdream pagodes</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/inc4eOUT.jpg\" alt=\"weird google deepdream result\" width=\"940\" height=\"627\"></p>\n<p><em>deepdream weirdness</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/inc5aAnimalx17.jpg\" alt=\"google deepdream weird animals\" width=\"940\" height=\"627\"></p>\n<p><em>deepdream weird animals</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/inception4cOUTanimal.jpg\" alt=\"google deepdream buildings, car and animals\" width=\"940\" height=\"627\"></p>\n<p><em>deepdream animals, buildings, cars</em></p>\n<hr>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/18/placeInc5aOUTPUT.jpg\" alt=\"google deepdream landscape\" width=\"940\" height=\"627\"></p>\n<p><em>deepdream landscape</em></p>\n<hr>\n<h2 id=\"mcetoc_1d9i6s92l2\">What is next?</h2>\n<p>So, one might ask: What is next? What awaits us in the future?</p>\n<p>Strong AI or even a Super intelligence? With enough data and computing power everything is possible.</p>\n<p>Or so it would seem.</p>\n<p>Ultimately, exploring things like computer dreams, neural networks and other implementations of biological results of evolution, helps us to better understand ourselves, the way ‘we work and function’.</p>\n<p>Will it ever be possible to fully mimic and recreate the human brain, the psychology or even the spiritual components (depends on your own philosophy and beliefs, I will not touch on this topic further)?</p>\n<p>Time, and more precisely, people with very bright ideas will tell.</p>\n<p>One thing is for sure: The future has many interesting things and discoveries waiting for us.</p>\n<p>And that is definitely very exiting!</p>",
            "image": "https://www.martinkaptein.com/media/posts/18/placeInc5aOUTPUT.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T16:58:29+02:00",
            "date_modified": "2019-04-28T16:58:29+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/playing-around-with-adb/",
            "url": "https://www.martinkaptein.com/playing-around-with-adb/",
            "title": "Playing around with ADB",
            "summary": "In this Blog post, I would like to take a look at ADB, which stands for Android Debug Bridge. It is a tool, which can do a surprising amount of stuff, which I was pleased to discover. This is an introduction to ADB. For this,&hellip;",
            "content_html": "<p>In this Blog post, I would like to take a look at ADB, which stands for Android Debug Bridge. It is a tool, which can do a surprising amount of stuff, which I was pleased to discover.</p>\n<p>This is an introduction to ADB.</p>\n<p>For this, I am going to use my Nexus 4, about which I have already written a lot of posts running the latest Lineage OS (at the time of writing it’s 15.1), which corresponds to Android 8.1 (which is quite amazing for such an old device, isn’t it).</p>\n<p>I am not really sure whether other devices also support stuff like ADB over network in their stock rom (please let me know in the comments).</p>\n<p>Anyway, this post is just about my experiences with ADB so far, besides the usual commands the modders and rooters from you already know for sure.</p>\n<h2 id=\"mcetoc_1d9i6jru30\">ADB installation on MacOS, Windows or Linux</h2>\n<p>The ADB command line tools are incredibly easy to install: Just download <a href=\"https://www.xda-developers.com/install-adb-windows-macos-linux/\">the zip file for your platform here</a>, extract it and <code>cd</code> into it from your terminal or command line.</p>\n<p>You can add it to your <code>$PATH</code> for convenience. On MacOS you can alternatively use homebrew to install the android platform tools (ADB):</p>\n<pre><code>\n(assuming you already have homebrew installed)\n\nbrew tap caskroom/cask\nbrew cask install android-platform-tools\n</code></pre>\n<p>On Debian use: <code>sudo apt-get install adb</code></p>\n<p>Run <code>adb devices</code> to check whether ADB has been installed successfully.</p>\n<p>Now, let’s get to the meat.</p>\n<h2 id=\"mcetoc_1d9i6jru31\">Useful ADB goodness</h2>\n<h2 id=\"mcetoc_1d9i6jru32\">ADB shell access over network</h2>\n<p>I was very pleased to find that I don’t need to physically connect my android phone to the computer in order to access the ADB shell.</p>\n<p>Activate <em>ADB over network</em> in the Developer options of our phone. You will see your local IP address and port.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/17/adb-dev-options-screenshot.jpg\" alt=\"ADB developer options screenshot on Nexus 4\" width=\"488\" height=\"814\"></p>\n<p><em>screenshot of Developer options in Android</em></p>\n<p><strong>Warning: Deactivate this options as soon as you don’t need it anymore or if you don’t trust your network - anyone could gain access to your phone now!</strong></p>\n<p>On your computer type:</p>\n<pre><code>\nadb connect 192.168.178.68:5555\nadb shell\n</code></pre>\n<p>Now you will be in the ADB shell of the phone, without connecting it physically.</p>\n<p>Type <code>ls /sdcard/</code> to see the contents of your home directory on your phone.</p>\n<p><strong>Note:</strong> If you get <em>permission denied</em> errors, it means that ADB has no root access on your phone. However, we won’t need it yet anyway.</p>\n<p>Here you can use the power of your most favourite UNIX terminal commands.</p>\n<p>Taking a look in the <code>/system/bin</code> directory reveals more information.</p>\n<p>Type <code>ls /system/bin</code> to view all of the commands.</p>\n<p>Here you will find a lot of interesting stuff.</p>\n<h2 id=\"mcetoc_1d9i6jru33\">ADB screen recording via remote shell</h2>\n<p>For example you can record the screen of your phone directly from your computer (remote shell):</p>\n<p><code>mako:/ $ screenrecord /sdcard/outputfile.mp4</code></p>\n<p>This will start to record a video of the screen of your phone. Press <code>CTRL+C</code> to stop the recording process.</p>\n<p>The recording will be saved in the home directory (/sdcard/) of your phone, which you can view with any android file manager. Using other directories might throw <code>Read-only file system</code> errors.</p>\n<p>Or you can exit the shell and transfer the recording to your computer:</p>\n<pre><code>\nmako:/ $ exit\n&gt; adb pull /sdcard/outputfile.mp4\n</code></pre>\n<h2 id=\"mcetoc_1d9i6jru34\">ADB remote app installation</h2>\n<p>Another handy feature of ADB is its ability to install apps. Of course that also works remotely.</p>\n<p>Say you downloaded some .apk files on your computer, and want to directly install them on your android device.</p>\n<p>Make sure that your phone is still connected using <code>adb devices</code>. If not, connect the phone again using <code>adb connect ipadress:port</code>.</p>\n<p>Navigate to the place where you have your apk’s : <code>cd your/dir</code>.</p>\n<p>Now you can remotely install your app using <code>adb install appname.apk</code>.</p>\n<h2 id=\"mcetoc_1d9i6jru35\">Conclusion</h2>\n<p>This is just the tip of the iceberg, there a great many more features that ADB offers. It’s very powerful. This openness is one of the biggest benefits of android, there are just so many possibilities. Sure, it opens attack vectors, but as they say:</p>\n<blockquote>\n<p>With great power comes great responsibility.</p>\n</blockquote>\n<p>And that applies to Android, and, broadly speaking, technology as well.</p>\n<p>This was just a brief introduction to the Android Debug Bridge protocol, there is much more, so hack away.</p>\n<p>I really hope to have some time in the future, to take a more in-depth look at the “hidden” features of android. These features really can make life easier.</p>",
            "image": "https://www.martinkaptein.com/media/posts/17/adb-dev-options-screenshot.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-28T16:49:45+02:00",
            "date_modified": "2019-04-28T16:49:45+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/old-tech-vs-new-tech-casio-vs-xiaomi/",
            "url": "https://www.martinkaptein.com/old-tech-vs-new-tech-casio-vs-xiaomi/",
            "title": "Old Technology vs New Technology - Casio F-91W vs Xiaomi Mi Band 2",
            "summary": "Old Technology vs New Technology - Comparing and analysing two wearable devicesIn this blog post I will make a point by comparing two wearable devices, one, which would be considered relatively dated and old, and one, which could be considered an example of new technology.",
            "content_html": "<h2 id=\"mcetoc_1d92l6sqd0\">Old Technology vs New Technology - Comparing and analysing two wearable devices</h2>\n<p>In this blog post I will make a point by comparing two wearable devices, one, which would be considered relatively dated and old, and one, which could be considered an example of <em>new technology</em>.</p>\n<p>Is new and modern technology really superior to <em>old technology</em>? I will compare the <strong>Casio F-91W</strong> watch to the <strong>Xiaomi Mi Band 2</strong>.</p>\n<p>I was inspired to write this post by a <a href=\"https://thenextweb.com/insider/2015/10/20/how-the-casio-f-91w-became-the-worlds-most-versatile-and-dangerous-watch/\">2015 article by TheNextWeb about the Casio F-91W</a>.</p>\n<p><strong>Before I begin, I would like to say that this comparison is not fair at all, as these devices have very different functions and are meant for different people</strong>.</p>\n<p>So without further a do, lets go!</p>\n<h3 id=\"mcetoc_1d92l6sqd1\">Casio F-91W</h3>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/casio-f-91w.jpg\" alt=\"Casio F-91W\" width=\"416\" height=\"555\"></p>\n<p><em>The Casio F-91W</em></p>\n<p>The Casio F-91W is watch manufactured by Casio (surprise!) from around 1991. To put that into perspective, that’s 27 (!) years ago.</p>\n<p>It is the world’s first affordable and mass-produced digital watch. It is very accurate (accurate to within 30 seconds a month), has a battery life of 7 years and has many more features (more on that later). But most importantly: It’s extremely reliable.</p>\n<p>This watch has an incredibly thrilling history: It has been frequently used by terrorist (yes, even Osama Bin Laden wore it), because it could be easily used by bomb-makers. It has been worn by everyone, from hipsters to Barack Obama.</p>\n<h3 id=\"mcetoc_1d92l6sqd2\">Xiaomi Mi Band 2</h3>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/xiaomi-mi-band-2.jpg\" alt=\"Xiaomi Mi Band 2\" width=\"362\" height=\"479\"></p>\n<p><em>The Xiaomi Mi Band 2</em></p>\n<p>The Xiaomi Mi Band 2 is a fitness and activity tracker, launched by Xiaomi in 2016. It is similarly priced to the Casio F-91W, and has also a rich feature-set.</p>\n<p>Hence, I chose it for this, rather unorthodox comparison.</p>\n<h2 id=\"mcetoc_1d92l6sqd3\">Comparing the features</h2>\n<p>Here a quick and unambiguous overview of the features of both devices.</p>\n<h3 id=\"mcetoc_1d92l6sqd4\">Features of the Xiaomi Mi Band 2</h3>\n<p>The Xiaomi Mi Band 2 is mainly a fitness tracker. It has a motion sensor, can track your steps, can monitor your heart rate, has a sleep tracker. On it’s small OLED screen it can display the time (that’s a really handy feature) and the date, amount of steps, distance, heart rate.</p>\n<p>It connects to your phone via Bluetooth (on Android it can be used to unlock your phone) and can display the kind of notification (for example it can show an icon for Instagram, Facebook etc.). Also it can vibrate, and shows incoming calls.</p>\n<p>It has one button, with which you can scroll through the various functions.</p>\n<p>By a flick of the wrist (which doesn’t work when you really need it) it can turn on the display (which is off, most of the time, to save battery).</p>\n<p>By the way, the battery can last easily a month, and can be just as easily recharged.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/charging-xiaomi.jpg\" alt=\"Charging the Xiaomi Mi Band 2\" width=\"700\" height=\"253\"></p>\n<p><em>Charging the Xiaomi Mi Band 2</em></p>\n<p>It should be noted that the Xiaomi Mi Band 2 doesn’t need to be connected to the phone the whole time, it works just fine without it. But from time to time you should connect it to sync it.</p>\n<p>So, as a matter of fact, you do need your phone.</p>\n<p>Last but not least, it is water resistant (IP67).</p>\n<h3 id=\"mcetoc_1d92l6sqd5\">Features of the Casio F-91W</h3>\n<p>The Casio F-91W is mainly a watch (as opposed to a fitness tracker) so it mainly shows the time. It has an always on display, on which you can read (at one glance, mind you) the time (hours, minutes AND seconds) the day of the week and date (day).</p>\n<p>Using the buttons you can read the full date.</p>\n<p>The Casio F-91W has a stopwatch and Alarm function, for which you don’t need any phone with a bluetooth connection at all. It has an option to beep every hour and has a light for the display.</p>\n<p>Also, you can switch between 12h and 24h modes.</p>\n<p>The battery last seven years, and the watch is water resistant (I didn’t find any IP rating, but it seems pretty reliable).</p>\n<p>It should be noted, that the time and date have to be set manually.</p>\n<p>Now that we have the technical stuff out of the way, I can finally move to my opinion.</p>\n<h2 id=\"mcetoc_1d92l6sqd6\">Design</h2>\n<p>Both devices are comfortable to wear, although the Casio F-91W is thinner (and a tiny bit lighter), which makes it, in my opinion, a little more comfortable and feel less bulky than the Xiaomi Mi Band 2.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/comparison-watch-thickness.jpg\" alt=\"Comparing Casio F-91W and Xiaomi Mi Band 2\" width=\"448\" height=\"597\"></p>\n<p><em>Comparing the Casio F-91W and Xiaomi Mi Band 2 in terms of thickness</em></p>\n<p>That said, some might prefer the Xiaomi Mi Band 2 as it’s much cleaner and there isn’t any text, which makes it much more modern-looking.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/watch-front-comparison.jpg\" alt=\"Watch front comparison\" width=\"527\" height=\"415\"></p>\n<p><em>Comparing the Casio F-91W and Xiaomi Mi Band 2 front</em></p>\n<h2 id=\"mcetoc_1d92l6sqd7\">My own opinion</h2>\n<p>Now I am moving to the essence of this blog post. And ultimately it all comes down to what you really need and what you expect from a wearable.</p>\n<p>For my, part I can say for sure, that I prefer the Casio Watch. For one, you don’t need to worry about charging it or syncing it with your phone.</p>\n<p>However, most importantly, it is build for time, and that task it fulfils perfectly. You don’t need to flick your wrist or push a button (for which you will need a second hand:) just to view the time and date.</p>\n<p>Of course, the Xiaomi Mi Band 2 can do much more, but it has also compromises. Sure, it is a fitness tracker (which the Casio isn’t) AND it can tell the time and date. But at the same time, I noticed that it didn’t really make my live easier: Every time I need to know the time I need to push a button, every month I need to recharge (but that is not such a big deal); if I want to set a quick alarm or even use a stopwatch <strong>I need to pull out my phone</strong>.</p>\n<p>And with the Casio watch I don’t need to.</p>\n<p>Of course, you will say, the Xiaomi Mi Band 2 is about fitness, and I agree with you. However, I, personally, can do sports without a fitness tracker, and don’t give such a big deal about amount of steps or something like that.</p>\n<p><strong>However</strong>, as a tech guy I have to admit, that the Xiaomi Mi Band 2 can offer much more than the official specifications, if you use a custom (android) app. Potentially, you could mod the firmware, and there are much more possibilities than the Casio F-91W.</p>\n<p>But even the Casio F-91W can do surprisingly much, as terrorist (unfortunately) even used it to build bombs and plan terrorist attacks. But that is nothing to be proud about.</p>\n<p>Last but not least, I like stuff that is easily repairable, and in these terms the Casio F-91W also scores higher.</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/casio-f91w-disassembly1.jpg\" alt=\"Casio F-91W disassembled 1\" width=\"384\" height=\"511\"></p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/16/casio-f91w-disassembly2.jpg\" alt=\"Casio F-91W disassembled 2\" width=\"473\" height=\"486\"></p>\n<p><em>Casio F-91W disassembled</em></p>\n<h2 id=\"mcetoc_1d92l6sqd8\">To summarise</h2>\n<p>As I have already stated in the beginning <strong>this comparison isn’t fair at all</strong>. However, these are both devices, which are meant to be worn on the wrist, and from that point of view it does makes sense to think about what option would suit you better.</p>\n<p><strong>The Xiaomi Mi Band 2</strong> is a fantastic product, it can really do a lot of things, especially if you own an android phone.</p>\n<p><strong>However, keep in mind that all your data is shared with Xiaomi, and if privacy is important to you, you should think twice.</strong></p>\n<p>I did some network traffic analysis, piping all the network traffic from my phone, trough a proxy on my computer. You will be really surprised seeing the amount of data shared, the moment you open the app. But that doesn’t apply only to Xiaomi…</p>\n<p>Perhaps, in the future, I will dedicate another blog post to that - it is a really interesting topic.</p>\n<p><strong>The Casio F-91W</strong> is a much more simpler product. It can only do a few things, but does these things very reliably and will never let you down.</p>\n<p>It has a really rich history and is already a kind of legend.</p>\n<p>As the NextWeb puts it:</p>\n<blockquote>\n<p>It’s simple, unassuming and reliable.</p>\n</blockquote>\n<p>And that’s what I like about it. It will only be getting better with time.</p>\n<p>Oh yeah, and it doesn’t share your personal data to unknown who.</p>\n<h2 id=\"mcetoc_1d92l6sqd9\">Personal choice</h2>\n<p>Ultimately, it is a personal choice for everyone.</p>\n<p>Perhaps, carry both devices simultaneously:)</p>",
            "image": "https://www.martinkaptein.com/media/posts/16/watch-front-comparison.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-22T15:59:45+02:00",
            "date_modified": "2019-04-22T15:59:45+02:00"
        },
        {
            "id": "https://www.martinkaptein.com/hugo-with-travis-ci-on-gh-pages/",
            "url": "https://www.martinkaptein.com/hugo-with-travis-ci-on-gh-pages/",
            "title": "Using Hugo with Travis CI on GitHub Pages",
            "summary": "In this blog post I will show how to build your static website with Hugo and deploy it to GitHub pages automatically using Travis CI. This can have a lot of benefits: For example, you can fix typo's directly from the Github web interface from&hellip;",
            "content_html": "<p>In this blog post I will show how to build your static website with <a href=\"https://gohugo.io\">Hugo</a> and deploy it to <a href=\"https://pages.github.com/\">GitHub pages</a> automatically using <a href=\"https://travis-ci.org\">Travis CI</a>.</p>\n<p>This can have a lot of benefits: For example, you can fix typo's directly from the Github web interface from your phone (without editing raw HTML).</p>\n<p>Due to various reasons I decided to use different repositories rather than one repo with different branches.</p>\n<p>Also, I kept the whole setup as minimal as possible. Hence, no bash script or travis command line tools are required.</p>\n<h2 id=\"mcetoc_1d92ksgq60\">Travis CI setup</h2>\n<h3 id=\"mcetoc_1d92ksgq61\">travis.yml</h3>\n<p>First of all, you will need to add a <code>.travis.yml</code> file to the root of your source directory. Please be aware that your operating system may hide the file.</p>\n<p>Paste this into your <code>.travis.yml</code> file <strong>and edit it as necessary</strong> (instrucions provided).</p>\n<pre><code>\nlanguage: go\n\ngo:\n  - master # This uses automatically the latest version of go\n\ninstall:\n  - go get github.com/spf13/hugo # This provides the latest version of Hugo to Travis CI\n\nscript:\n  - hugo # This commands builds your website on travis\n\ndeploy:\n  local_dir: public # Default static site output dir for Hugo\n  repo: &lt;yourusername&gt;/&lt;yourusername&gt;.github.io # This is the slug of the repo you want to deploy your site to\n  target_branch: master # GitHub pages branch to deploy to (in other cases it can be gh-pages)\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_TOKEN # This is the authentication which you will setup in the next step in travis-ci dashboard\n  email: yourmail@mail.com\n  name: \"Your username\"\n  on:\n    branch: master\n</code></pre>\n<h3 id=\"mcetoc_1d92ksgq62\">GitHub authentication</h3>\n<p>Let's setup the git authentication.</p>\n<p>Generate a Personal Access Token from this GitHub page: <a href=\"https://github.com/settings/tokens\">github.com/settings/tokens</a>.</p>\n<p>Please make sure to check repo - full control of repositories (the rest you don't need to enable).</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/15/gh_access_token.jpg\" alt=\"github access token for Travis CI\" width=\"1267\" height=\"754\"></p>\n<p><em>Generating a GitHub access token for Travis CI</em></p>\n<p>Copy the secret key to your clipboard and head over to <a href=\"https://travis-ci.org/\">https://travis-ci.org/</a>.</p>\n<p>Enable your source repository and turn the following options to on:</p>\n<ul>\n<li>Build only if .travis.yml is present</li>\n<li>Build branch updates</li>\n<li>Build pull request updates</li>\n</ul>\n<p>Then, scroll down and add a environment variable:</p>\n<p>Set <code>Name</code> to <code>GITHUB_TOKEN</code> and paste your secret key (from the clipboard) to the <code>Value</code> field.</p>\n<p>When you added it, it should hide the value and keep it secure (it is encrypted), according to the travis-ci docs.</p>\n<p>The settings should look like this:</p>\n<p><img class=\"post__image\" src=\"https://www.martinkaptein.com/media/posts/15/travis-ci-settings.jpg\" alt=\"Travis CI dashboard settings\" width=\"1648\" height=\"749\"></p>\n<p><em>My Travis CI dashboard settings.</em></p>\n<h3 id=\"mcetoc_1d92ksgq63\">Push to your source repo</h3>\n<p>Now, it's time to see Travis CI in action: Just git add <code>.travis.yml</code>, commit and push.</p>\n<p>The build process should start automatically and push to your GitHub Pages repo.</p>\n<h2 id=\"mcetoc_1d92ksgq64\">Summary</h2>\n<p>To sum up, this is a very minimal travis-ci setup. It's worth noting that Travis CI will always check for and download the latest version of <code>go</code> and <code>hugo</code>.</p>\n<p>To speed the process up, you could move the hugo binaries to your source repo. But for the sake of simlicity I have omitted these options.</p>",
            "image": "https://www.martinkaptein.com/media/posts/15/travis-ci-settings.jpg",
            "author": {
                "name": "Martin Kaptein"
            },
            "tags": [
            ],
            "date_published": "2019-04-22T15:52:14+02:00",
            "date_modified": "2019-04-22T15:52:14+02:00"
        }
    ]
}
